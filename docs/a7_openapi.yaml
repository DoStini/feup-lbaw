openapi: 3.0.0

info:
  title: 'reFurniture Web API'
  version: '1.0'
  description: 'Web Resources Specification (A7) for reFurniture'

servers:
- url: http://lbaw.fe.up.pt/
  description: Production server

externalDocs:
  description: Find more info here.
  url: https://git.fe.up.pt/lbaw/lbaw2122/lbaw2116/-/wikis/eap

tags:
  - name: 'M01: Authentication'
  - name: 'M02: User Profiles'
  - name: 'M03: Products'
  - name: 'M04: Orders and Shopping Cart'
  - name: 'M05: Reviews'
  - name: 'M06: Wishlist'
  - name: 'M07: Static Pages'
  - name: 'M08: Notifications'
  - name: 'M09: Coupons'
  - name: 'M10: Newsletter'


paths:
  /join:
    get:
      operationId: R101
      summary: 'R101: Login and Register Form'
      description: 'Provide login and register form. Access: PUB'
      tags:
        - 'M01: Authentication'
      parameters:
        - in: query
          name: redirect-uri
          schema:
            type: string
          description: 'URI to return when login is successful.'
      responses:
        '200':
          description: 'Ok. Show log-in and register form [UI05](https://git.fe.up.pt/lbaw/lbaw2122/lbaw2116/-/wikis/er#ui05-sign-in-sign-up)'
        '302':
          description: 'Redirect to Home Page (UI 01) if user already logged in'
          headers:
            Location:
              schema:
                type: string
                example: '/'
              examples:
                302Success:
                  description: 'User already authenticated. Redirect to Home Page (UI 01) or to Redirect-URI query parameter'
                  value: '/'
  /login:
    post:
      operationId: R102
      summary: 'R102: Login Action'
      description: 'Processes the login form submission. Access: PUB'
      tags:
        - 'M01: Authentication'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                redirect-uri:
                  type: string
                  description: 'URI to return when login is successful.'
              required:
                - email
                - password
 
      responses:
        '302':
          description: 'Redirect after processing correct login credentials.'
          headers:
            Location:
              schema:
                type: string
                example: '/'
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to Home Page (UI 01) or '
                  value: '/'
        '401':
          description: 'Wrong email or password, authentication incomplete.'


  /register:
    post:
      operationId: R103
      summary: 'R103: Register Action'
      description: 'Processes the new user registration form submission. Access: PUB'
      tags:
        - 'M01: Authentication'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - name
                - password

      responses:
        '302':
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
                example: 
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to user personal data (UI12).'
                  value: '/users/private/{id}'
        '422':
          description: 'Email invalid or already exists.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                example:
                    email: "nunodev@refurniture.pt"

  /recover:
    get:
      operationId: R104
      summary: 'R104: Recover Account Form'
      description: 'Provide recover account form. Access: PUB'
      tags:
        - 'M01: Authentication'
      responses:
        '200':
          description: 'Ok. Show recover password form UI06'
        '302':
          description: 'Redirect to Home Page (UI 01) if user already logged in'
          headers:
            Location:
              schema:
                type: string
                example: '/'
              examples:
                302Success:
                  description: 'User already authenticated. Redirect to Home Page (UI 01)'
                  value: '/'
    post:
      operationId: R104
      summary: 'R104: Logout Action'
      description: 'Logout the current authenticated used. Access: USR, ADM'
      tags:
        - 'M01: Authentication'
      responses:
        '302':
          description: 'Redirect after processing logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful logout. Redirect to home page (UI01).'
                  value: '/'


  /users/{id}:
    get:
      operationId: R106
      summary: 'R106: View user profile'
      description: 'Show the individual user profile. Access: USR'
      tags:
        - 'M01: Authentication and Individual Profile'

      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Ok. Show view profile UI'
 

  /api/works:
    get:
      operationId: R202
      summary: 'R202: Search Works API'
      description: 'Searches for works and returns the results as JSON. Access: PUB.'

      tags: 
        - 'M02: Works'

      parameters:
        - in: query
          name: query
          description: String to use for full-text search
          schema:
            type: string
          required: false
        - in: query
          name: item
          description: Category of the works
          schema:
            type: string
          required: false
        - in: query
          name: loaned
          description: Boolean with the loaned flag value
          schema:
            type: boolean
          required: false
        - in: query
          name: owner
          description: Boolean with the owner flag value
          schema:
            type: boolean
          required: false
        - in: query
          name: classification
          description: Integer corresponding to the work classification
          schema:
            type: integer
          required: false

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    obs:
                      type: string
                    year:
                      type: string
                    owner:
                      type: string
                    type:
                      type: string
                example:
                  - id: 1
                    title: Rihanna - Unapologetic
                    obs: Good pop music album.
                    year: 2012
                    owner: Joana Lima
                    type: MP3
                  - id: 15
                    title: Mr. Bean
                    obs: The best comedy movie.
                    year: 1995
                    owner: Manuel Teixeira
                    type: DVD
